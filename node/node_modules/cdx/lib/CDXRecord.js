var CDXRecord, moment;

moment = require("moment");

module.exports = CDXRecord = (function() {
  CDXRecord.prototype.data = {};

  function CDXRecord(delimiter, signature) {
    this.delimiter = delimiter;
    this.signature = signature;
  }

  CDXRecord.prototype.getData = function() {
    return this.data;
  };

  CDXRecord.prototype.generateRecord = function() {};

  CDXRecord.prototype.parseRecord = function(data) {
    var fieldName, fields, i, value, _ref, _results;
    if (data == null) {
      return;
    }
    fields = data.split(this.delimiter);
    _ref = this.signature;
    _results = [];
    for (i in _ref) {
      fieldName = _ref[i];
      if ((fields[i] != null) && fields[i] !== "-") {
        switch (fieldName) {
          case "date":
            value = moment(fields[i], "YYYYMMDDHHmmss");
            break;
          case "compressedDATFileOffset":
          case "compressedARCFileOffset":
          case "uncompressedDATFileOffset":
          case "uncompressedARCFileOffset":
          case "responseCode":
          case "ARCDocumentLength":
          case "port":
          case "compressedRecordSize":
            value = parseInt(fields[i]);
            break;
          default:
            value = fields[i];
        }
        this[fieldName] = value;
        _results.push(this.data[fieldName] = value);
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  return CDXRecord;

})();
